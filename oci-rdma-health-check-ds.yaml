---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-labeler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: node-labeler-role
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "watch", "list", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: node-labeler-role-binding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: node-labeler-role
subjects:
- kind: ServiceAccount
  name: node-labeler
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: oci-rdma-health-check
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: oci-rdma-health-check
  template:
    metadata:
      labels:
        app: oci-rdma-health-check  
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node.kubernetes.io/instance-type
                operator: In
                values:
                - BM.GPU.A100-v2.8
                - BM.GPU.B4.8
                - BM.GPU4.8
      serviceAccountName: node-labeler
      tolerations:
      - operator: "Exists"
      - effect: NoSchedule
        key: oci.oraclecloud.com/oci-rdma-health-check
      volumes:
      - name: host
        hostPath:
          path: /
          type: Directory
      initContainers:
      - name: kubectl
        image: bitnami/kubectl:latest
        command: ["/bin/sh"]
        args: ["-c", "cp -v /opt/bitnami/kubectl/bin/kubectl /host/usr/bin/"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: host
          mountPath: /host
      containers:
      - name: oci-rdma-health-check
        image: oraclelinux:7
        command: ["/bin/sh"]
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        args:
        - "-c"
        - |
          if [ $(command -v oci-cn-auth) ]
          then
            while true; do
              authTrue=$(oci-cn-auth -i | grep "authenticated: True" | wc -l)
              authFalse=$(oci-cn-auth -i | grep "authenticated: False" | wc -l)
              kubectl label nodes ${NODE_NAME} oci.oraclecloud.com/oci_cn_auth_true="${authTrue}" --overwrite
              kubectl label nodes ${NODE_NAME} oci.oraclecloud.com/oci_cn_auth_false="${authFalse}" --overwrite
              authAll="false"
              if ((authTrue > 0)) && ((authFalse == 0)); then authAll="true" && kubectl taint nodes ${NODE_NAME} oci.oraclecloud.com/oci-rdma-health-check:NoSchedule-; fi
              kubectl label nodes ${NODE_NAME} oci.oraclecloud.com/oci_cn_auth_all="${authAll}" --overwrite
              sleep 180;
            done
          else
            echo "Not a GPU node, exiting"
          fi
        resources:
          limits:
            cpu: "100m"
            memory: "64Mi"
        securityContext:
          privileged: true
        volumeMounts:
        - name: host
          mountPath: /
      terminationGracePeriodSeconds: 1
